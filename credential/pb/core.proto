syntax = "proto3";

package credential;

// DB -----------
import "google/protobuf/timestamp.proto";
import "options/gorm.proto";

import "credential/pb/origin.proto";
import "credential/pb/private.proto";
import "credential/pb/public.proto";
import "credential/pb/realm.proto";

// Core credential that combines Private, Public, and/or Realm so that credential.Private or
// credential.Public that are gathered from a credential.Realm} are properly scoped when used.
// 
// A core credential must always have an Origin, but only needs 1 of Private, Public, or Realm set.
message Core {
  option (gorm.opts).ormable = true;
  string Id = 1 [(gorm.field).tag = {type:"uuid" primary_key: true}];
  google.protobuf.Timestamp CreatedAt = 4;
  google.protobuf.Timestamp UpdatedAt = 5;

  // Origin - The origin of this Credential. 
  Origin Origin = 10 [(gorm.field).tag = {not_null: true}];

  // Private - The credential.Private either gathered from Realm,
  // or used to credential.ReplayableHash authenticate into the realm.
  Private Private = 11;

  // Public - The credential.Public gathered from Realm. 
  Public Public = 12;

  // Realm - credential.Realm where Private and/or Public was gathered
  // and/or the credential.Realm to which Private and/or Public can be
  // used to authenticate.
  Realm Realm = 13;

  // repeated Login Logins = 14;
  int32 LoginsCount = 8;
}
