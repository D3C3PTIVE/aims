syntax = "proto3";

package network;

import "network/pb/service.proto";
import "host/pb/host.proto";

// Repository is a service that allows to interact with all hosts.
service Services {
   // Services alone, without detailed port/host information
   rpc Create(CreateServiceRequest) returns (CreateServiceResponse) {}
   rpc Read(ReadServiceRequest) returns (ReadServiceResponse) {}
   rpc List(ReadServiceRequest) returns (ReadServiceResponse) {}
   rpc Upsert(UpsertServiceRequest) returns (UpsertServiceResponse) {}
   rpc Delete(DeleteServiceRequest) returns (DeleteServiceResponse) {}

   // Host services (with extra ports and lower-level stuff)
   rpc ReadHost(ReadServiceRequest) returns (ReadServiceResponse) {}
   rpc ListHost(ReadServiceRequest) returns (ReadServiceResponse) {}
   rpc UpsertHost(UpsertServiceRequest) returns (UpsertServiceResponse) {}
}

message CreateServiceRequest {
    repeated network.Service Services = 1;
}

message CreateServiceResponse {
    repeated network.Service Services = 1;
}

message ReadServiceRequest{
    network.Service Service = 1;
    host.Host Host = 2;
}

message ReadServiceResponse{
    repeated network.Service Services = 1;
    repeated host.Host Host = 2;
}

message ReadServiceManyRequest{
    network.Service Service = 1;
    host.Host Host = 2;
}

message ReadServiceManyResponse{
    repeated network.Service Services = 1;
    repeated host.Host Host = 2;
}

message UpsertServiceRequest{
    repeated network.Service Services = 1;
}

message UpsertServiceResponse{
    repeated network.Service Services = 1;
}

message DeleteServiceRequest{
    repeated network.Service Services = 1;
}

message DeleteServiceResponse{
    repeated network.Service Services = 1;
}
