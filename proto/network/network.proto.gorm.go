package network



import (
	"github.com/gofrs/uuid"
	"gorm.io/gorm"
)



// BeforeCreate - GORM-specific autogenerated helpers.
func (trace *TraceORM) BeforeCreate(tx *gorm.DB) (err error) {
    id, err := uuid.NewV4()
	if err != nil {
		return err
	}
    trace.Id = id.String()

    return nil
}



// BeforeCreate - GORM-specific autogenerated helpers.
func (hop *HopORM) BeforeCreate(tx *gorm.DB) (err error) {
    id, err := uuid.NewV4()
	if err != nil {
		return err
	}
    hop.Id = id.String()

    return nil
}



// BeforeCreate - GORM-specific autogenerated helpers.
func (distance *DistanceORM) BeforeCreate(tx *gorm.DB) (err error) {
    id, err := uuid.NewV4()
	if err != nil {
		return err
	}
    distance.Id = id.String()

    return nil
}



// BeforeCreate - GORM-specific autogenerated helpers.
func (times *TimesORM) BeforeCreate(tx *gorm.DB) (err error) {
    id, err := uuid.NewV4()
	if err != nil {
		return err
	}
    times.Id = id.String()

    return nil
}



// BeforeCreate - GORM-specific autogenerated helpers.
func (address *AddressORM) BeforeCreate(tx *gorm.DB) (err error) {
    id, err := uuid.NewV4()
	if err != nil {
		return err
	}
    address.Id = id.String()

    return nil
}



