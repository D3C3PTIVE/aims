syntax = "proto3";

package scan;

// DB -----------
import "options/gorm.proto";
import "types/types.proto";
import "google/protobuf/timestamp.proto";


// Info - A general overview of a Scan, with basic information
// on targeted/found services, protocols and flags.
message Info {
  option (gorm.opts).ormable = true;
  gorm.types.UUID Id = 1 [(gorm.field).tag = {type:"uuid" primary_key: true}];

  // @gotags: xml:"numservices,attr"
  int32 NumServices = 10;
  // @gotags: xml:"protocol,attr"
  string Protocol = 11;
  // @gotags: xml:"scanflags,attr"
  string ScanFlags = 12;
  // @gotags: xml:"services,attr"
  string Services = 13;
  // @gotags: xml:"type,attr"
  string Type = 14;
}

// Verbose - Contains the verbosity level of the scan
message Verbose {
  option (gorm.opts).ormable = true;
  gorm.types.UUID Id = 1 [(gorm.field).tag = {type:"uuid" primary_key: true}];

  // @gotags: xml:"level,attr"
  int32 Level = 10;
}

// Debugging - Contains the debugging level of the scan
message Debugging {
  option (gorm.opts).ormable = true;
  gorm.types.UUID Id = 1 [(gorm.field).tag = {type:"uuid" primary_key: true}];
  // @gotags: xml:"level,attr"
  int32 Level = 10;
}

// Task - Information about a task
message Task {
  option (gorm.opts).ormable = true;
  gorm.types.UUID Id = 1 [(gorm.field).tag = {type:"uuid" primary_key: true}];

  // @gotags: xml:"time,attr"
  google.protobuf.Timestamp Time = 10;
  // @gotags: xml:"task,attr"
  string Task = 11;
  // @gotags: xml:"extrainfo,attr"
  string ExtraInfo = 12;
}

// TaskProgress - Progression of a task
message TaskProgress {
  option (gorm.opts).ormable = true;
  gorm.types.UUID Id = 1 [(gorm.field).tag = {type:"uuid" primary_key: true}];

  // @gotags: xml:"percent,attr"
  float Percent = 10;
  // @gotags: xml:"remaining,attr"
  int32 Remaining = 11;
  // @gotags: xml:"task,attr"
  string Task = 12;
  // @gotags: xml:"etc,attr"
  google.protobuf.Timestamp Etc = 13;
  // @gotags: xml:"time,attr"
  google.protobuf.Timestamp Time = 14;
}

// Target - Represents a target, how it was specified when passed to nmap,
// its status and the reason of its status. Example:
// <target specification="domain.does.not.exist" status="skipped" reason="invalid"/>
message Target {
  option (gorm.opts).ormable = true;
  gorm.types.UUID Id = 1 [(gorm.field).tag = {type:"uuid" primary_key: true}];

  // @gotags: xml:"specification,attr"
  string Specification = 10;
  // @gotags: xml:"status,attr"
  string Status = 11;
  // @gotags: xml:"reason,attr"
  string Reason = 12;
}

// Stats - Contains statistics for a Nmap scan
message Stats {
  option (gorm.opts).ormable = true;
  gorm.types.UUID Id = 1 [(gorm.field).tag = {type:"uuid" primary_key: true}];

  // @gotags: xml:"finished"
  Finished Finished = 10;
  // @gotags: xml:"hosts"
  HostStats Hosts = 11;
}

// Finished - Statistics for a Scan after it has run.
message Finished {
  option (gorm.opts).ormable = true;
  gorm.types.UUID Id = 1 [(gorm.field).tag = {type:"uuid" primary_key: true}];

  // @gotags: xml:"time,attr"
  google.protobuf.Timestamp Time = 10;
  // @gotags: xml:"timestr,attr"
  string TimeStr = 11;
  // @gotags: xml:"elapsed,attr"
  float Elapsed = 12;
  // @gotags: xml:"summary,attr"
  string Summary = 13;
  // @gotags: xml:"exit,attr"
  string Exit = 14;
  // @gotags: xml:"errormsg,attr"
  string ErrorMsg = 15;
}

// Host - Contains the amount of up/down hosts and total count
message HostStats {
  option (gorm.opts).ormable = true;
  gorm.types.UUID Id = 1 [(gorm.field).tag = {type:"uuid" primary_key: true}];

  // @gotags: xml:"up,attr"
  int32 Up = 10;
  // @gotags: xml:"down,attr"
  int32 Down = 11;
  // @gotags: xml:"total,attr"
  int32 Total = 12;
}

// NmapScript - Represents a Nmap Scripting Engine Script.
// The inner elements can be an arbitrary collection of Tables and Elements. They can be empty
message NmapScript {
  option (gorm.opts).ormable = true;
  // @gotags: display:"ID" readonly:"true"
  gorm.types.UUID Id = 1 [(gorm.field).tag = {type:"uuid" primary_key: true}];
  // @gotags: display:"Created at" readonly:"true"
  google.protobuf.Timestamp CreatedAt = 4;
  // @gotags: display:"Updated at" readonly:"true"
  google.protobuf.Timestamp UpdatedAt = 5;

  // @gotags: xml:"output,attr"
  string Output = 10;
  // @gotags: xml:"elem,omitempty"
  repeated Element Elements = 11;
  // @gotags: xml:"table,omitempty"
  repeated Table Tables = 12;
}

// elements - The smallest building block for scripts/tables. Key is optional
message Element {
  option (gorm.opts).ormable = true;
  // @gotags: display:"ID" readonly:"true"
  gorm.types.UUID Id = 1 [(gorm.field).tag = {type:"uuid" primary_key: true}];

  // @gotags: xml:"key,attr,omitempty"
  string Key = 10;
  // @gotags: xml:",innerxml"
  string Value = 11;
}

// Table - An arbitrary collection of (sub-)Tables and Elements. Can be empty
message Table {
  option (gorm.opts).ormable = true;
  // @gotags: display:"ID" readonly:"true"
  gorm.types.UUID Id = 1 [(gorm.field).tag = {type:"uuid" primary_key: true}];

  // @gotags: xml:"key,attr,omitempty"
  string Key = 10;
  // @gotags: xml:"table,omitempty"
  repeated Table Tables = 11;
  // @gotags: xml:"elem,omitempty"
  repeated Element Elements = 12;
}

// Times - Contains time statistics for a Nmap scan
message Times {
  option (gorm.opts).ormable = true;
  // @gotags: display:"ID" readonly:"true"
  gorm.types.UUID Id = 1 [(gorm.field).tag = {type:"uuid" primary_key: true}];


  // @gotags: xml:"srtt,attr"
  string SRTT = 10;
  // @gotags: xml:"rttvar,attr"
  string RTT = 11;
  // @gotags: xml:"to,attr"
  string To = 12;
}

// Smurf - COntains responses from a smurf attack
message Smurf {
  option (gorm.opts).ormable = true;
  // @gotags: display:"ID" readonly:"true"
  gorm.types.UUID Id = 1 [(gorm.field).tag = {type:"uuid" primary_key: true}];

  // @gotags: xml:"responses,attr"
  string Responses = 10;
}
