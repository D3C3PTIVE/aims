syntax = "proto3";

package credential;

// DB -----------
import "google/protobuf/timestamp.proto";
import "options/gorm.proto";
import "types/types.proto";

// Public - A publicly disclosed credential (ex: username)
message Public {
  option (gorm.opts).ormable = true;
  gorm.types.UUID Id = 1 [(gorm.field).tag = {type:"uuid" primary_key: true}];
  // @gotags: display:"Created at" readonly:"true"
  google.protobuf.Timestamp CreatedAt = 4;
  // @gotags: display:"Updated at" readonly:"true"
  google.protobuf.Timestamp UpdatedAt = 5;

  // @gotags: display:"Type" readonly:"true"
  PublicType Type = 10;
  // @gotags: display:"Username" readonly:"true"
  string Username = 11;
}

// PublicType - The type of a Public credential. Each of these types might
// trigger different validations when using fetching/creating Private in DB.
enum PublicType {
        // A Username is the default type, such that if the Public.Username is
        // empty, the type will not be able to save itself in DB without
        // explicitely specifying either its .Username field, or by creating a
        // credential.BlankUsername type first.
        Username = 0;
        BlankUsername = 1;
}
