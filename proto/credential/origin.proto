syntax = "proto3";

package credential;

// DB -----------
import "google/protobuf/timestamp.proto";
import "options/gorm.proto";
import "types/types.proto";

import "network/service.proto";

// Origin - The origin of a credential.Core, with any information related
// to the Origin.Type, which might manual, imports, services, crackers, etc.
message Origin {
  option (gorm.opts).ormable = true;
  gorm.types.UUID Id = 1 [(gorm.field).tag = {type:"uuid" primary_key: true}];
  google.protobuf.Timestamp CreatedAt = 4;
  google.protobuf.Timestamp UpdatedAt = 5;

  // Common
  gorm.types.UUID SessionId = 10;

  // Origin Manual
  // gorm.types.UUID UserId = 8; // The user of the attacker infrastructure

  // Origin CrackedPassword
  string Cracker = 20; // The name of the cracking tool

  // Origin Service
  network.Service Service = 30 [(gorm.field).belongs_to = {}];
}

// OriginType - Valid origins for a credential.Core
enum OriginType {
  // Manual - A manually added credential. This includes 
  // strings given as arguments to a command-line application.
  Manual = 0;

  // OriginImport - An origin for core credentials that were
  // imported from a file, which can be of various formats,
  // and contain list of credentials as well as a single key.
  Import = 1;

  // OriginCrackedPassword - An origin for core credentials that
  // were cracked from an originating credential.Core credential.
  CrackedPassword = 2;

  // OriginService - Origin of a credential.Core that has been
  // gathered from a service through some means of interaction
  // with it, for instance Metasploit auxiliary/exploit modules.
  Service = 3;
}
