// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.18.1
// source: credential/origin.proto

package credential

import (
	_ "github.com/infobloxopen/protoc-gen-gorm/options"
	network "github.com/maxlandon/aims/proto/network"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// OriginType - Valid origins for a credential.Core
type OriginType int32

const (
	// Manual - A manually added credential. This includes
	// strings given as arguments to a command-line application.
	OriginType_Manual OriginType = 0
	// OriginImport - An origin for core credentials that were
	// imported from a file, which can be of various formats,
	// and contain list of credentials as well as a single key.
	OriginType_Import OriginType = 1
	// OriginCrackedPassword - An origin for core credentials that
	// were cracked from an originating credential.Core credential.
	OriginType_CrackedPassword OriginType = 2
	// OriginService - Origin of a credential.Core that has been
	// gathered from a service through some means of interaction
	// with it, for instance Metasploit auxiliary/exploit modules.
	OriginType_Service OriginType = 3
)

// Enum value maps for OriginType.
var (
	OriginType_name = map[int32]string{
		0: "Manual",
		1: "Import",
		2: "CrackedPassword",
		3: "Service",
	}
	OriginType_value = map[string]int32{
		"Manual":          0,
		"Import":          1,
		"CrackedPassword": 2,
		"Service":         3,
	}
)

func (x OriginType) Enum() *OriginType {
	p := new(OriginType)
	*p = x
	return p
}

func (x OriginType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OriginType) Descriptor() protoreflect.EnumDescriptor {
	return file_credential_origin_proto_enumTypes[0].Descriptor()
}

func (OriginType) Type() protoreflect.EnumType {
	return &file_credential_origin_proto_enumTypes[0]
}

func (x OriginType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OriginType.Descriptor instead.
func (OriginType) EnumDescriptor() ([]byte, []int) {
	return file_credential_origin_proto_rawDescGZIP(), []int{0}
}

// Origin - The origin of a credential.Core, with any information related
// to the Origin.Type, which might manual, imports, services, crackers, etc.
type Origin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                 `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
	// Common
	SessionId string     `protobuf:"bytes,10,opt,name=SessionId,proto3" json:"SessionId,omitempty"`
	Type      OriginType `protobuf:"varint,11,opt,name=Type,proto3,enum=credential.OriginType" json:"Type,omitempty"`
	// Origin Import
	// Filename - The `File.basename` of the file from which the credential.Cores were imported.
	// Because only a basename is available, a Filename may be used more than once for the same task.
	Filename string `protobuf:"bytes,20,opt,name=Filename,proto3" json:"Filename,omitempty"`
	// Origin CrackedPassword
	Cracker string `protobuf:"bytes,30,opt,name=Cracker,proto3" json:"Cracker,omitempty"` // The name of the cracking tool
	// Origin Service
	Service *network.Service `protobuf:"bytes,40,opt,name=Service,proto3" json:"Service,omitempty"`
}

func (x *Origin) Reset() {
	*x = Origin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_credential_origin_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Origin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Origin) ProtoMessage() {}

func (x *Origin) ProtoReflect() protoreflect.Message {
	mi := &file_credential_origin_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Origin.ProtoReflect.Descriptor instead.
func (*Origin) Descriptor() ([]byte, []int) {
	return file_credential_origin_proto_rawDescGZIP(), []int{0}
}

func (x *Origin) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Origin) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Origin) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Origin) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *Origin) GetType() OriginType {
	if x != nil {
		return x.Type
	}
	return OriginType_Manual
}

func (x *Origin) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *Origin) GetCracker() string {
	if x != nil {
		return x.Cracker
	}
	return ""
}

func (x *Origin) GetService() *network.Service {
	if x != nil {
		return x.Service
	}
	return nil
}

var File_credential_origin_proto protoreflect.FileDescriptor

var file_credential_origin_proto_rawDesc = []byte{
	0x0a, 0x17, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x2f, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x63, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xd8, 0x02, 0x0a, 0x06, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x1e, 0x0a, 0x02,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0xba, 0xb9, 0x19, 0x0a, 0x0a, 0x08,
	0x12, 0x04, 0x75, 0x75, 0x69, 0x64, 0x28, 0x01, 0x52, 0x02, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x09,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2a,
	0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x63,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69,
	0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x69,
	0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x72, 0x61, 0x63, 0x6b, 0x65,
	0x72, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72,
	0x12, 0x32, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x42, 0x06, 0xba, 0xb9, 0x19, 0x02, 0x22, 0x00, 0x52, 0x07, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x3a, 0x06, 0xba, 0xb9, 0x19, 0x02, 0x08, 0x01, 0x2a, 0x46, 0x0a, 0x0a,
	0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x61,
	0x6e, 0x75, 0x61, 0x6c, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74,
	0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x10, 0x03, 0x42, 0x91, 0x01, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x42, 0x0b, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x6d, 0x61, 0x78, 0x6c, 0x61, 0x6e, 0x64, 0x6f, 0x6e, 0x2f, 0x61, 0x69, 0x6d,
	0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0xa2, 0x02, 0x03, 0x43, 0x58, 0x58, 0xaa, 0x02, 0x0a, 0x43, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0xca, 0x02, 0x0a, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0xe2, 0x02, 0x16, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x5c,
	0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0a, 0x43, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_credential_origin_proto_rawDescOnce sync.Once
	file_credential_origin_proto_rawDescData = file_credential_origin_proto_rawDesc
)

func file_credential_origin_proto_rawDescGZIP() []byte {
	file_credential_origin_proto_rawDescOnce.Do(func() {
		file_credential_origin_proto_rawDescData = protoimpl.X.CompressGZIP(file_credential_origin_proto_rawDescData)
	})
	return file_credential_origin_proto_rawDescData
}

var file_credential_origin_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_credential_origin_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_credential_origin_proto_goTypes = []interface{}{
	(OriginType)(0),               // 0: credential.OriginType
	(*Origin)(nil),                // 1: credential.Origin
	(*timestamppb.Timestamp)(nil), // 2: google.protobuf.Timestamp
	(*network.Service)(nil),       // 3: network.Service
}
var file_credential_origin_proto_depIdxs = []int32{
	2, // 0: credential.Origin.CreatedAt:type_name -> google.protobuf.Timestamp
	2, // 1: credential.Origin.UpdatedAt:type_name -> google.protobuf.Timestamp
	0, // 2: credential.Origin.Type:type_name -> credential.OriginType
	3, // 3: credential.Origin.Service:type_name -> network.Service
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_credential_origin_proto_init() }
func file_credential_origin_proto_init() {
	if File_credential_origin_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_credential_origin_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Origin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_credential_origin_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_credential_origin_proto_goTypes,
		DependencyIndexes: file_credential_origin_proto_depIdxs,
		EnumInfos:         file_credential_origin_proto_enumTypes,
		MessageInfos:      file_credential_origin_proto_msgTypes,
	}.Build()
	File_credential_origin_proto = out.File
	file_credential_origin_proto_rawDesc = nil
	file_credential_origin_proto_goTypes = nil
	file_credential_origin_proto_depIdxs = nil
}
