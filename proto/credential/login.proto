syntax = "proto3";

package credential;

// DB -----------
import "google/protobuf/timestamp.proto";
import "options/gorm.proto";
import "types/types.proto";

import "credential/core.proto";
import "network/service.proto";

// Login - The use of a credential.Core against a service.
message Login {
  option (gorm.opts).ormable = true;
  gorm.types.UUID Id = 1 [(gorm.field).tag = {type:"uuid" primary_key: true}];
  google.protobuf.Timestamp CreatedAt = 4;
  google.protobuf.Timestamp UpdatedAt = 5;

  // gorm.types.UUID CoreId = 10 [(gorm.field).tag = {type:"uuid" primary_key: true}];
  google.protobuf.Timestamp LastAttemptedAt = 11;

  string AccessLevel = 20;
  string Status = 21;

  // Core - The credential.Core used to authenticate to Service
  Core Core = 13 [(gorm.field).belongs_to = {}];

  // Service - The service that either accepted the credential.Core as valid, invalid, 
  // or on which the credential.Core should be tested to see if it is valid.
  network.Service Service = 22 [(gorm.field).belongs_to = {}];   

  // The host on which Service runs
  gorm.types.UUID HostId = 23 [(gorm.field).tag = {type:"uuid" not_null: true}]; 
}
