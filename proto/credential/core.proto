syntax = "proto3";

package credential;

// DB -----------
import "google/protobuf/timestamp.proto";
import "options/gorm.proto";
import "types/types.proto";

// The credential model in Wiregost is heavily inspired from Metasploit's credential
// architecture & management.

// Core - Base object for a credential in Wiregost.
message Core {
        uint32 ID = 1;
        // @gotags: gorm:"not null"
        uint32 OriginID = 2;            // A credential core has one origin
        string OriginType = 3;          // For polymorphic associations
        uint32 PrivateID = 4;
        uint32 PublicID = 5;
        uint32 RealmID = 6;
        // @gotags: gorm:"not null"
        uint32 WorkspaceID = 7;
        int32 LoginsCount = 8;

        // Timestamp
        google.protobuf.Timestamp CreatedAt = 38;
        google.protobuf.Timestamp UpdatedAt = 39;

}

// Realm - The realm in which a CredentialPublic can be used to authenticate
// or from which a CredentialPrivate was looted.
message Realm {
        uint32 ID = 1;
        // @gotags: gorm:"not null"
        string Key = 2;
        // @gotags: gorm:"not null"
        string Value = 3;

        // Timestamp
        google.protobuf.Timestamp CreatedAt = 38;
        google.protobuf.Timestamp UpdatedAt = 39;

}

// Origin - Information on provenance of the credential
message Origin {
        
}

enum OriginType {
        MANUAL = 0;
        IMPORT = 1;
        SERVICE = 2;
        SESSION = 3;
        CRACKED = 4;
}

