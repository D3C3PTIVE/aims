// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.18.1
// source: network/packet.proto

package network

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Sequence -
type Sequence struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: xml:"class,attr"
	Class string `protobuf:"bytes,1,opt,name=Class,proto3" json:"Class,omitempty" xml:"class,attr"`
	// @inject_tag: xml:"values,attr"
	Values string `protobuf:"bytes,2,opt,name=Values,proto3" json:"Values,omitempty" xml:"values,attr"`
}

func (x *Sequence) Reset() {
	*x = Sequence{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_packet_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sequence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sequence) ProtoMessage() {}

func (x *Sequence) ProtoReflect() protoreflect.Message {
	mi := &file_network_packet_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sequence.ProtoReflect.Descriptor instead.
func (*Sequence) Descriptor() ([]byte, []int) {
	return file_network_packet_proto_rawDescGZIP(), []int{0}
}

func (x *Sequence) GetClass() string {
	if x != nil {
		return x.Class
	}
	return ""
}

func (x *Sequence) GetValues() string {
	if x != nil {
		return x.Values
	}
	return ""
}

// TCPSequence - Represents a detected TCP Sequence
type TCPSequence struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: xml:"index,attr"
	Index int32 `protobuf:"varint,1,opt,name=Index,proto3" json:"Index,omitempty" xml:"index,attr"`
	// @inject_tag: xml:"difficulty,attr"
	Difficulty string `protobuf:"bytes,2,opt,name=Difficulty,proto3" json:"Difficulty,omitempty" xml:"difficulty,attr"`
	// @inject_tag: xml:"values,attr"
	Values string `protobuf:"bytes,3,opt,name=Values,proto3" json:"Values,omitempty" xml:"values,attr"`
}

func (x *TCPSequence) Reset() {
	*x = TCPSequence{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_packet_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TCPSequence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TCPSequence) ProtoMessage() {}

func (x *TCPSequence) ProtoReflect() protoreflect.Message {
	mi := &file_network_packet_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TCPSequence.ProtoReflect.Descriptor instead.
func (*TCPSequence) Descriptor() ([]byte, []int) {
	return file_network_packet_proto_rawDescGZIP(), []int{1}
}

func (x *TCPSequence) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *TCPSequence) GetDifficulty() string {
	if x != nil {
		return x.Difficulty
	}
	return ""
}

func (x *TCPSequence) GetValues() string {
	if x != nil {
		return x.Values
	}
	return ""
}

// IPIDSequence - Represents a detected IP ID Sequence
type IPIDSequence struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: xml:"index,attr"
	Index int32 `protobuf:"varint,1,opt,name=Index,proto3" json:"Index,omitempty" xml:"index,attr"`
	// @inject_tag: xml:"difficulty,attr"
	Difficulty string `protobuf:"bytes,2,opt,name=Difficulty,proto3" json:"Difficulty,omitempty" xml:"difficulty,attr"`
	// @inject_tag: xml:"values,attr"
	Values string `protobuf:"bytes,3,opt,name=Values,proto3" json:"Values,omitempty" xml:"values,attr"`
}

func (x *IPIDSequence) Reset() {
	*x = IPIDSequence{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_packet_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPIDSequence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPIDSequence) ProtoMessage() {}

func (x *IPIDSequence) ProtoReflect() protoreflect.Message {
	mi := &file_network_packet_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPIDSequence.ProtoReflect.Descriptor instead.
func (*IPIDSequence) Descriptor() ([]byte, []int) {
	return file_network_packet_proto_rawDescGZIP(), []int{2}
}

func (x *IPIDSequence) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *IPIDSequence) GetDifficulty() string {
	if x != nil {
		return x.Difficulty
	}
	return ""
}

func (x *IPIDSequence) GetValues() string {
	if x != nil {
		return x.Values
	}
	return ""
}

// TCPTSSequence - Represents a detected TCP TS Sequence
type TCPTSSequence struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: xml:"index,attr"
	Index int32 `protobuf:"varint,1,opt,name=Index,proto3" json:"Index,omitempty" xml:"index,attr"`
	// @inject_tag: xml:"difficulty,attr"
	Difficulty string `protobuf:"bytes,2,opt,name=Difficulty,proto3" json:"Difficulty,omitempty" xml:"difficulty,attr"`
	// @inject_tag: xml:"values,attr"
	Values string `protobuf:"bytes,3,opt,name=Values,proto3" json:"Values,omitempty" xml:"values,attr"`
}

func (x *TCPTSSequence) Reset() {
	*x = TCPTSSequence{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_packet_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TCPTSSequence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TCPTSSequence) ProtoMessage() {}

func (x *TCPTSSequence) ProtoReflect() protoreflect.Message {
	mi := &file_network_packet_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TCPTSSequence.ProtoReflect.Descriptor instead.
func (*TCPTSSequence) Descriptor() ([]byte, []int) {
	return file_network_packet_proto_rawDescGZIP(), []int{3}
}

func (x *TCPTSSequence) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *TCPTSSequence) GetDifficulty() string {
	if x != nil {
		return x.Difficulty
	}
	return ""
}

func (x *TCPTSSequence) GetValues() string {
	if x != nil {
		return x.Values
	}
	return ""
}

var File_network_packet_proto protoreflect.FileDescriptor

var file_network_packet_proto_rawDesc = []byte{
	0x0a, 0x14, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x22,
	0x38, 0x0a, 0x08, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x5b, 0x0a, 0x0b, 0x54, 0x43, 0x50,
	0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1e,
	0x0a, 0x0a, 0x44, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x44, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x5c, 0x0a, 0x0c, 0x49, 0x50, 0x49, 0x44, 0x53, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1e, 0x0a, 0x0a,
	0x44, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x44, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x22, 0x5d, 0x0a, 0x0d, 0x54, 0x43, 0x50, 0x54, 0x53, 0x53, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1e, 0x0a, 0x0a, 0x44,
	0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x44, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x42, 0x86, 0x01, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x42, 0x0b, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x50, 0x01, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d,
	0x61, 0x78, 0x6c, 0x61, 0x6e, 0x64, 0x6f, 0x6e, 0x2f, 0x61, 0x69, 0x6d, 0x73, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0xa2, 0x02, 0x03, 0x4e, 0x58, 0x58, 0xaa, 0x02, 0x07, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0xca, 0x02, 0x07, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0xe2, 0x02, 0x13, 0x4e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0xea, 0x02, 0x07, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_network_packet_proto_rawDescOnce sync.Once
	file_network_packet_proto_rawDescData = file_network_packet_proto_rawDesc
)

func file_network_packet_proto_rawDescGZIP() []byte {
	file_network_packet_proto_rawDescOnce.Do(func() {
		file_network_packet_proto_rawDescData = protoimpl.X.CompressGZIP(file_network_packet_proto_rawDescData)
	})
	return file_network_packet_proto_rawDescData
}

var file_network_packet_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_network_packet_proto_goTypes = []interface{}{
	(*Sequence)(nil),      // 0: network.Sequence
	(*TCPSequence)(nil),   // 1: network.TCPSequence
	(*IPIDSequence)(nil),  // 2: network.IPIDSequence
	(*TCPTSSequence)(nil), // 3: network.TCPTSSequence
}
var file_network_packet_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_network_packet_proto_init() }
func file_network_packet_proto_init() {
	if File_network_packet_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_network_packet_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sequence); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_packet_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TCPSequence); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_packet_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IPIDSequence); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_packet_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TCPTSSequence); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_network_packet_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_network_packet_proto_goTypes,
		DependencyIndexes: file_network_packet_proto_depIdxs,
		MessageInfos:      file_network_packet_proto_msgTypes,
	}.Build()
	File_network_packet_proto = out.File
	file_network_packet_proto_rawDesc = nil
	file_network_packet_proto_goTypes = nil
	file_network_packet_proto_depIdxs = nil
}
