// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.18.1
// source: scan/result.proto

package scan

import (
	_ "github.com/infobloxopen/protoc-gen-gorm/options"
	types "github.com/infobloxopen/protoc-gen-gorm/types"
	host "github.com/maxlandon/aims/proto/gen/go/host"
	network "github.com/maxlandon/aims/proto/gen/go/network"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Result - A type containing various objects that are outputs of a scan.
// It has only one .Target, which theoretically means that we must have
// n Results for n Targets.
// This type is to be created from and used by a scan.Run type, which has
// various methods to set up, populate, curate and save the data from a
// complete Scan, sometimes concurrently.
// A Result is not meant to be saved in a database:
// it is only used as a feeder type for the scan.Run.
type Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScanId  *types.UUID      `protobuf:"bytes,1,opt,name=ScanId,proto3" json:"ScanId,omitempty"`
	Host    *host.Host       `protobuf:"bytes,2,opt,name=Host,proto3" json:"Host,omitempty"`
	Address *network.Address `protobuf:"bytes,3,opt,name=Address,proto3" json:"Address,omitempty"`
	Port    *host.Port       `protobuf:"bytes,4,opt,name=Port,proto3" json:"Port,omitempty"`
	Service *network.Service `protobuf:"bytes,5,opt,name=Service,proto3" json:"Service,omitempty"`
	// Data - The output data of a scan for a given protocol/service,
	// eg. if the scan is an SSH one, this will contain the SSH result.
	// If you pass your service-specific results in there, be sure to
	// add a branch case in the Go scan package, in which you populate
	// the entity tree with it.
	Data []byte `protobuf:"bytes,10,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (x *Result) Reset() {
	*x = Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scan_result_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Result) ProtoMessage() {}

func (x *Result) ProtoReflect() protoreflect.Message {
	mi := &file_scan_result_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Result.ProtoReflect.Descriptor instead.
func (*Result) Descriptor() ([]byte, []int) {
	return file_scan_result_proto_rawDescGZIP(), []int{0}
}

func (x *Result) GetScanId() *types.UUID {
	if x != nil {
		return x.ScanId
	}
	return nil
}

func (x *Result) GetHost() *host.Host {
	if x != nil {
		return x.Host
	}
	return nil
}

func (x *Result) GetAddress() *network.Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *Result) GetPort() *host.Port {
	if x != nil {
		return x.Port
	}
	return nil
}

func (x *Result) GetService() *network.Service {
	if x != nil {
		return x.Service
	}
	return nil
}

func (x *Result) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_scan_result_proto protoreflect.FileDescriptor

var file_scan_result_proto_rawDesc = []byte{
	0x0a, 0x11, 0x73, 0x63, 0x61, 0x6e, 0x2f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x04, 0x73, 0x63, 0x61, 0x6e, 0x1a, 0x12, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x0f, 0x68, 0x6f, 0x73, 0x74, 0x2f, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x0f, 0x68, 0x6f, 0x73, 0x74, 0x2f, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xde, 0x01, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x28, 0x0a, 0x06,
	0x53, 0x63, 0x61, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67,
	0x6f, 0x72, 0x6d, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x06,
	0x53, 0x63, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x04, 0x48, 0x6f, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x48, 0x6f, 0x73, 0x74,
	0x52, 0x04, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x1e, 0x0a, 0x04, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x04, 0x50, 0x6f,
	0x72, 0x74, 0x12, 0x2a, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x44, 0x61,
	0x74, 0x61, 0x42, 0x74, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x63, 0x61, 0x6e, 0x42, 0x0b,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2b, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x61, 0x78, 0x6c, 0x61, 0x6e,
	0x64, 0x6f, 0x6e, 0x2f, 0x61, 0x69, 0x6d, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67,
	0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x73, 0x63, 0x61, 0x6e, 0xa2, 0x02, 0x03, 0x53, 0x58, 0x58,
	0xaa, 0x02, 0x04, 0x53, 0x63, 0x61, 0x6e, 0xca, 0x02, 0x04, 0x53, 0x63, 0x61, 0x6e, 0xe2, 0x02,
	0x10, 0x53, 0x63, 0x61, 0x6e, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0xea, 0x02, 0x04, 0x53, 0x63, 0x61, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_scan_result_proto_rawDescOnce sync.Once
	file_scan_result_proto_rawDescData = file_scan_result_proto_rawDesc
)

func file_scan_result_proto_rawDescGZIP() []byte {
	file_scan_result_proto_rawDescOnce.Do(func() {
		file_scan_result_proto_rawDescData = protoimpl.X.CompressGZIP(file_scan_result_proto_rawDescData)
	})
	return file_scan_result_proto_rawDescData
}

var file_scan_result_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_scan_result_proto_goTypes = []interface{}{
	(*Result)(nil),          // 0: scan.Result
	(*types.UUID)(nil),      // 1: gorm.types.UUID
	(*host.Host)(nil),       // 2: host.Host
	(*network.Address)(nil), // 3: network.Address
	(*host.Port)(nil),       // 4: host.Port
	(*network.Service)(nil), // 5: network.Service
}
var file_scan_result_proto_depIdxs = []int32{
	1, // 0: scan.Result.ScanId:type_name -> gorm.types.UUID
	2, // 1: scan.Result.Host:type_name -> host.Host
	3, // 2: scan.Result.Address:type_name -> network.Address
	4, // 3: scan.Result.Port:type_name -> host.Port
	5, // 4: scan.Result.Service:type_name -> network.Service
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_scan_result_proto_init() }
func file_scan_result_proto_init() {
	if File_scan_result_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_scan_result_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_scan_result_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_scan_result_proto_goTypes,
		DependencyIndexes: file_scan_result_proto_depIdxs,
		MessageInfos:      file_scan_result_proto_msgTypes,
	}.Build()
	File_scan_result_proto = out.File
	file_scan_result_proto_rawDesc = nil
	file_scan_result_proto_goTypes = nil
	file_scan_result_proto_depIdxs = nil
}
