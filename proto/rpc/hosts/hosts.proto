syntax = "proto3";

package hosts;

import "host/host.proto";
import "host/process.proto";
import "host/filesystem.proto";

// Hosts is a service that allows to interact with all hosts.
service Hosts {
   // General
   rpc Create(CreateHostRequest) returns (CreateHostResponse) {}
   rpc Read(ReadHostRequest) returns (ReadHostResponse) {}
   rpc Upsert(UpsertHostRequest) returns (UpsertHostResponse) {}
   rpc Delete(DeleteHostRequest) returns (DeleteHostResponse) {}
}

message HostFilters {
    int64 MaxResults = 1;

    bool Users = 10;

    // Files: if true and read, loads host files.
    //        if true and write, overwrites any matching file paths.
    bool Files = 20;

    // Processes: if true and read, loads host processes.
    //            if true and write, overwrites any matching process IDs.
    bool Processes = 30;

    bool Ports = 40;
    bool Trace = 41;

    bool Scripts = 70;
    bool OSFingerprints = 71;
}

// General

message CreateHostRequest {
    HostFilters Filters = 1;
    repeated host.Host Hosts = 2;
}

message CreateHostResponse {
    repeated host.Host Hosts = 1;
}

message ReadHostRequest{
    HostFilters Filters = 1;
    host.Host Host = 2;
}

message ReadHostResponse{
    repeated host.Host Hosts = 1;
}

message UpsertHostRequest{
    HostFilters Filters = 1;
    repeated host.Host Hosts = 2;
}

message UpsertHostResponse{
    repeated host.Host Hosts = 1;
}

message DeleteHostRequest{
    repeated host.Host Hosts = 1;
}

message DeleteHostResponse{
    repeated host.Host Hosts = 1;
}

// message ReadHostManyRequest{
//     host.Host Host = 1;
// }
//
// message ReadHostManyResponse{
//     repeated host.Host Hosts = 1;
// }

