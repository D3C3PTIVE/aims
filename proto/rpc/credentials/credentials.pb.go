// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.18.1
// source: rpc/credentials/credentials.proto

package credentials

import (
	credential "github.com/d3c3ptive/aims/proto/credential"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateCredentialRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Credentials []*credential.Core `protobuf:"bytes,1,rep,name=Credentials,proto3" json:"Credentials,omitempty"`
}

func (x *CreateCredentialRequest) Reset() {
	*x = CreateCredentialRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_credentials_credentials_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCredentialRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCredentialRequest) ProtoMessage() {}

func (x *CreateCredentialRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_credentials_credentials_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCredentialRequest.ProtoReflect.Descriptor instead.
func (*CreateCredentialRequest) Descriptor() ([]byte, []int) {
	return file_rpc_credentials_credentials_proto_rawDescGZIP(), []int{0}
}

func (x *CreateCredentialRequest) GetCredentials() []*credential.Core {
	if x != nil {
		return x.Credentials
	}
	return nil
}

type CreateCredentialResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Credentials []*credential.Core `protobuf:"bytes,1,rep,name=Credentials,proto3" json:"Credentials,omitempty"`
}

func (x *CreateCredentialResponse) Reset() {
	*x = CreateCredentialResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_credentials_credentials_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCredentialResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCredentialResponse) ProtoMessage() {}

func (x *CreateCredentialResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_credentials_credentials_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCredentialResponse.ProtoReflect.Descriptor instead.
func (*CreateCredentialResponse) Descriptor() ([]byte, []int) {
	return file_rpc_credentials_credentials_proto_rawDescGZIP(), []int{1}
}

func (x *CreateCredentialResponse) GetCredentials() []*credential.Core {
	if x != nil {
		return x.Credentials
	}
	return nil
}

type ReadCredentialRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Credential *credential.Core `protobuf:"bytes,1,opt,name=Credential,proto3" json:"Credential,omitempty"`
}

func (x *ReadCredentialRequest) Reset() {
	*x = ReadCredentialRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_credentials_credentials_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadCredentialRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadCredentialRequest) ProtoMessage() {}

func (x *ReadCredentialRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_credentials_credentials_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadCredentialRequest.ProtoReflect.Descriptor instead.
func (*ReadCredentialRequest) Descriptor() ([]byte, []int) {
	return file_rpc_credentials_credentials_proto_rawDescGZIP(), []int{2}
}

func (x *ReadCredentialRequest) GetCredential() *credential.Core {
	if x != nil {
		return x.Credential
	}
	return nil
}

type ReadCredentialResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Credentials []*credential.Core `protobuf:"bytes,1,rep,name=Credentials,proto3" json:"Credentials,omitempty"`
}

func (x *ReadCredentialResponse) Reset() {
	*x = ReadCredentialResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_credentials_credentials_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadCredentialResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadCredentialResponse) ProtoMessage() {}

func (x *ReadCredentialResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_credentials_credentials_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadCredentialResponse.ProtoReflect.Descriptor instead.
func (*ReadCredentialResponse) Descriptor() ([]byte, []int) {
	return file_rpc_credentials_credentials_proto_rawDescGZIP(), []int{3}
}

func (x *ReadCredentialResponse) GetCredentials() []*credential.Core {
	if x != nil {
		return x.Credentials
	}
	return nil
}

type ReadCredentialManyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Credential *credential.Core `protobuf:"bytes,1,opt,name=Credential,proto3" json:"Credential,omitempty"`
}

func (x *ReadCredentialManyRequest) Reset() {
	*x = ReadCredentialManyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_credentials_credentials_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadCredentialManyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadCredentialManyRequest) ProtoMessage() {}

func (x *ReadCredentialManyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_credentials_credentials_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadCredentialManyRequest.ProtoReflect.Descriptor instead.
func (*ReadCredentialManyRequest) Descriptor() ([]byte, []int) {
	return file_rpc_credentials_credentials_proto_rawDescGZIP(), []int{4}
}

func (x *ReadCredentialManyRequest) GetCredential() *credential.Core {
	if x != nil {
		return x.Credential
	}
	return nil
}

type ReadCredentialManyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Credentials []*credential.Core `protobuf:"bytes,1,rep,name=Credentials,proto3" json:"Credentials,omitempty"`
}

func (x *ReadCredentialManyResponse) Reset() {
	*x = ReadCredentialManyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_credentials_credentials_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadCredentialManyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadCredentialManyResponse) ProtoMessage() {}

func (x *ReadCredentialManyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_credentials_credentials_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadCredentialManyResponse.ProtoReflect.Descriptor instead.
func (*ReadCredentialManyResponse) Descriptor() ([]byte, []int) {
	return file_rpc_credentials_credentials_proto_rawDescGZIP(), []int{5}
}

func (x *ReadCredentialManyResponse) GetCredentials() []*credential.Core {
	if x != nil {
		return x.Credentials
	}
	return nil
}

type UpsertCredentialRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Credentials []*credential.Core `protobuf:"bytes,1,rep,name=Credentials,proto3" json:"Credentials,omitempty"`
}

func (x *UpsertCredentialRequest) Reset() {
	*x = UpsertCredentialRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_credentials_credentials_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertCredentialRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertCredentialRequest) ProtoMessage() {}

func (x *UpsertCredentialRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_credentials_credentials_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertCredentialRequest.ProtoReflect.Descriptor instead.
func (*UpsertCredentialRequest) Descriptor() ([]byte, []int) {
	return file_rpc_credentials_credentials_proto_rawDescGZIP(), []int{6}
}

func (x *UpsertCredentialRequest) GetCredentials() []*credential.Core {
	if x != nil {
		return x.Credentials
	}
	return nil
}

type UpsertCredentialResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Credentials []*credential.Core `protobuf:"bytes,1,rep,name=Credentials,proto3" json:"Credentials,omitempty"`
}

func (x *UpsertCredentialResponse) Reset() {
	*x = UpsertCredentialResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_credentials_credentials_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertCredentialResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertCredentialResponse) ProtoMessage() {}

func (x *UpsertCredentialResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_credentials_credentials_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertCredentialResponse.ProtoReflect.Descriptor instead.
func (*UpsertCredentialResponse) Descriptor() ([]byte, []int) {
	return file_rpc_credentials_credentials_proto_rawDescGZIP(), []int{7}
}

func (x *UpsertCredentialResponse) GetCredentials() []*credential.Core {
	if x != nil {
		return x.Credentials
	}
	return nil
}

type DeleteCredentialRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Credentials []*credential.Core `protobuf:"bytes,1,rep,name=Credentials,proto3" json:"Credentials,omitempty"`
}

func (x *DeleteCredentialRequest) Reset() {
	*x = DeleteCredentialRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_credentials_credentials_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCredentialRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCredentialRequest) ProtoMessage() {}

func (x *DeleteCredentialRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_credentials_credentials_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCredentialRequest.ProtoReflect.Descriptor instead.
func (*DeleteCredentialRequest) Descriptor() ([]byte, []int) {
	return file_rpc_credentials_credentials_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteCredentialRequest) GetCredentials() []*credential.Core {
	if x != nil {
		return x.Credentials
	}
	return nil
}

type DeleteCredentialResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Credentials []*credential.Core `protobuf:"bytes,1,rep,name=Credentials,proto3" json:"Credentials,omitempty"`
}

func (x *DeleteCredentialResponse) Reset() {
	*x = DeleteCredentialResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_credentials_credentials_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCredentialResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCredentialResponse) ProtoMessage() {}

func (x *DeleteCredentialResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_credentials_credentials_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCredentialResponse.ProtoReflect.Descriptor instead.
func (*DeleteCredentialResponse) Descriptor() ([]byte, []int) {
	return file_rpc_credentials_credentials_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteCredentialResponse) GetCredentials() []*credential.Core {
	if x != nil {
		return x.Credentials
	}
	return nil
}

var File_rpc_credentials_credentials_proto protoreflect.FileDescriptor

var file_rpc_credentials_credentials_proto_rawDesc = []byte{
	0x0a, 0x21, 0x72, 0x70, 0x63, 0x2f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x73, 0x2f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73,
	0x1a, 0x15, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x2f, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4d, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x32, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x2e, 0x43, 0x6f, 0x72, 0x65, 0x52, 0x0b, 0x43, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x22, 0x4e, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x32, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x2e, 0x43, 0x6f, 0x72, 0x65, 0x52, 0x0b, 0x43, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x22, 0x49, 0x0a, 0x15, 0x52, 0x65, 0x61, 0x64, 0x43, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x30, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x2e, 0x43, 0x6f, 0x72, 0x65, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x22, 0x4c, 0x0a, 0x16, 0x52, 0x65, 0x61, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x0b, 0x43,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x43, 0x6f,
	0x72, 0x65, 0x52, 0x0b, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x22,
	0x4d, 0x0a, 0x19, 0x52, 0x65, 0x61, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x4d, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x0a,
	0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x43, 0x6f,
	0x72, 0x65, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x22, 0x50,
	0x0a, 0x1a, 0x52, 0x65, 0x61, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x4d, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x0b,
	0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x43,
	0x6f, 0x72, 0x65, 0x52, 0x0b, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73,
	0x22, 0x4d, 0x0a, 0x17, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x0b, 0x43,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x43, 0x6f,
	0x72, 0x65, 0x52, 0x0b, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x22,
	0x4e, 0x0a, 0x18, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x0b, 0x43,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x43, 0x6f,
	0x72, 0x65, 0x52, 0x0b, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x22,
	0x4d, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x0b, 0x43, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x43, 0x6f, 0x72,
	0x65, 0x52, 0x0b, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x22, 0x4e,
	0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x0b, 0x43, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x43, 0x6f, 0x72,
	0x65, 0x52, 0x0b, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x32, 0xbe,
	0x03, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x57,
	0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x24, 0x2e, 0x63, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25,
	0x2e, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x04, 0x52, 0x65, 0x61, 0x64, 0x12,
	0x22, 0x2e, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x2e, 0x52, 0x65,
	0x61, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x73, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x04, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x22, 0x2e, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73,
	0x2e, 0x52, 0x65, 0x61, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x73, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x57, 0x0a,
	0x06, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x12, 0x24, 0x2e, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x73, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x43, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e,
	0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x2e, 0x55, 0x70, 0x73, 0x65,
	0x72, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x12, 0x24, 0x2e, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42,
	0xa0, 0x01, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x73, 0x42, 0x10, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x61, 0x78, 0x6c, 0x61, 0x6e, 0x64, 0x6f, 0x6e, 0x2f, 0x61, 0x69,
	0x6d, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x63, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0xa2, 0x02, 0x03, 0x43, 0x58, 0x58, 0xaa, 0x02,
	0x0b, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0xca, 0x02, 0x0b, 0x43,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0xe2, 0x02, 0x17, 0x43, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0b, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rpc_credentials_credentials_proto_rawDescOnce sync.Once
	file_rpc_credentials_credentials_proto_rawDescData = file_rpc_credentials_credentials_proto_rawDesc
)

func file_rpc_credentials_credentials_proto_rawDescGZIP() []byte {
	file_rpc_credentials_credentials_proto_rawDescOnce.Do(func() {
		file_rpc_credentials_credentials_proto_rawDescData = protoimpl.X.CompressGZIP(file_rpc_credentials_credentials_proto_rawDescData)
	})
	return file_rpc_credentials_credentials_proto_rawDescData
}

var file_rpc_credentials_credentials_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_rpc_credentials_credentials_proto_goTypes = []interface{}{
	(*CreateCredentialRequest)(nil),    // 0: credentials.CreateCredentialRequest
	(*CreateCredentialResponse)(nil),   // 1: credentials.CreateCredentialResponse
	(*ReadCredentialRequest)(nil),      // 2: credentials.ReadCredentialRequest
	(*ReadCredentialResponse)(nil),     // 3: credentials.ReadCredentialResponse
	(*ReadCredentialManyRequest)(nil),  // 4: credentials.ReadCredentialManyRequest
	(*ReadCredentialManyResponse)(nil), // 5: credentials.ReadCredentialManyResponse
	(*UpsertCredentialRequest)(nil),    // 6: credentials.UpsertCredentialRequest
	(*UpsertCredentialResponse)(nil),   // 7: credentials.UpsertCredentialResponse
	(*DeleteCredentialRequest)(nil),    // 8: credentials.DeleteCredentialRequest
	(*DeleteCredentialResponse)(nil),   // 9: credentials.DeleteCredentialResponse
	(*credential.Core)(nil),            // 10: credential.Core
}
var file_rpc_credentials_credentials_proto_depIdxs = []int32{
	10, // 0: credentials.CreateCredentialRequest.Credentials:type_name -> credential.Core
	10, // 1: credentials.CreateCredentialResponse.Credentials:type_name -> credential.Core
	10, // 2: credentials.ReadCredentialRequest.Credential:type_name -> credential.Core
	10, // 3: credentials.ReadCredentialResponse.Credentials:type_name -> credential.Core
	10, // 4: credentials.ReadCredentialManyRequest.Credential:type_name -> credential.Core
	10, // 5: credentials.ReadCredentialManyResponse.Credentials:type_name -> credential.Core
	10, // 6: credentials.UpsertCredentialRequest.Credentials:type_name -> credential.Core
	10, // 7: credentials.UpsertCredentialResponse.Credentials:type_name -> credential.Core
	10, // 8: credentials.DeleteCredentialRequest.Credentials:type_name -> credential.Core
	10, // 9: credentials.DeleteCredentialResponse.Credentials:type_name -> credential.Core
	0,  // 10: credentials.Credentials.Create:input_type -> credentials.CreateCredentialRequest
	2,  // 11: credentials.Credentials.Read:input_type -> credentials.ReadCredentialRequest
	2,  // 12: credentials.Credentials.List:input_type -> credentials.ReadCredentialRequest
	6,  // 13: credentials.Credentials.Upsert:input_type -> credentials.UpsertCredentialRequest
	8,  // 14: credentials.Credentials.Delete:input_type -> credentials.DeleteCredentialRequest
	1,  // 15: credentials.Credentials.Create:output_type -> credentials.CreateCredentialResponse
	3,  // 16: credentials.Credentials.Read:output_type -> credentials.ReadCredentialResponse
	3,  // 17: credentials.Credentials.List:output_type -> credentials.ReadCredentialResponse
	7,  // 18: credentials.Credentials.Upsert:output_type -> credentials.UpsertCredentialResponse
	9,  // 19: credentials.Credentials.Delete:output_type -> credentials.DeleteCredentialResponse
	15, // [15:20] is the sub-list for method output_type
	10, // [10:15] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_rpc_credentials_credentials_proto_init() }
func file_rpc_credentials_credentials_proto_init() {
	if File_rpc_credentials_credentials_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rpc_credentials_credentials_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCredentialRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_credentials_credentials_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCredentialResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_credentials_credentials_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadCredentialRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_credentials_credentials_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadCredentialResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_credentials_credentials_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadCredentialManyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_credentials_credentials_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadCredentialManyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_credentials_credentials_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertCredentialRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_credentials_credentials_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertCredentialResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_credentials_credentials_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCredentialRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_credentials_credentials_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCredentialResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rpc_credentials_credentials_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rpc_credentials_credentials_proto_goTypes,
		DependencyIndexes: file_rpc_credentials_credentials_proto_depIdxs,
		MessageInfos:      file_rpc_credentials_credentials_proto_msgTypes,
	}.Build()
	File_rpc_credentials_credentials_proto = out.File
	file_rpc_credentials_credentials_proto_rawDesc = nil
	file_rpc_credentials_credentials_proto_goTypes = nil
	file_rpc_credentials_credentials_proto_depIdxs = nil
}
